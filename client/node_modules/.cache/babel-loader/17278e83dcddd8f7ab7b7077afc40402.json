{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malak\\\\Desktop\\\\codeNote\\\\client\\\\src\\\\components\\\\Folders\\\\Folders.jsx\";\nimport React, { Component } from 'react';\nimport './Folders.scss';\nimport add from '../../assets/add.png';\nimport { findByPlaceholderText } from '@testing-library/react';\n\nclass Folders extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addFolder: false\n    };\n    this.addFolder = this.addFolder.bind(this);\n  }\n\n  addFolder(e) {\n    console.log(e);\n    this.setState(addFolder = true);\n  }\n\n  componentDidMount() {\n    const folders = document.querySelector('.folders');\n    let currMouseX = 0;\n    let foldersW = 0;\n    /*mousedown on the resizers: Track the current \r\n    position of mouse and dimension of the original element \r\n    it is triggered when the user drags the element*/\n\n    const mouseDownHandler = function (e) {\n      currMouseX = e.clientX; //calculate the dimensions of the element\n\n      const styles = window.getComputedStyle(folders);\n      foldersW = parseInt(styles.width, 10);\n      /*  mousemove on document: Calculate how far the mouse has been \r\n        moved, and adjust the dimension of the element */\n\n      document.addEventListener('mousemove', mouseMoveHandler);\n      document.addEventListener('mouseup', mouseUpHandler);\n    };\n\n    const mouseMoveHandler = function (e) {\n      // How far the mouse has been moved\n      const distanceX = e.clientX - currMouseX; // Adjust the dimension of element\n\n      folders.style.width = `${foldersW + distanceX}px`;\n      console.log('mouse move handler is called');\n    };\n\n    const resizer = document.querySelector('.folders__resizer');\n    resizer.addEventListener('mousedown', mouseDownHandler);\n\n    const mouseUpHandler = function () {\n      // Remove the handlers of `mousemove` and `mouseup`\n      document.removeEventListener('mousemove', mouseMoveHandler);\n      document.removeEventListener('mouseup', mouseUpHandler);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"folders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"folders__resizer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"folders__input-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"folders__input\",\n      type: \"text\",\n      name: \"folderName\",\n      placeholder: \"Enter folder name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"folders__add\",\n      src: add,\n      alt: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Folders;","map":{"version":3,"sources":["C:/Users/malak/Desktop/codeNote/client/src/components/Folders/Folders.jsx"],"names":["React","Component","add","findByPlaceholderText","Folders","constructor","props","state","addFolder","bind","e","console","log","setState","componentDidMount","folders","document","querySelector","currMouseX","foldersW","mouseDownHandler","clientX","styles","window","getComputedStyle","parseInt","width","addEventListener","mouseMoveHandler","mouseUpHandler","distanceX","style","resizer","removeEventListener","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,qBAAT,QAAsC,wBAAtC;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAM9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAJnBC,KAImB,GAJX;AACNC,MAAAA,SAAS,EAAG;AADN,KAIW;AAEjB,SAAKA,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,SAAS,CAACE,CAAD,EAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,SAAKG,QAAL,CAAcL,SAAS,GAAG,IAA1B;AACD;;AAEDM,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAhB;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,QAAQ,GAAG,CAAf;AAEA;;;;AAGA,UAAMC,gBAAgB,GAAG,UAAUV,CAAV,EAAa;AACpCQ,MAAAA,UAAU,GAAGR,CAAC,CAACW,OAAf,CADoC,CAGpC;;AACA,YAAMC,MAAM,GAAGC,MAAM,CAACC,gBAAP,CAAwBT,OAAxB,CAAf;AACAI,MAAAA,QAAQ,GAAGM,QAAQ,CAACH,MAAM,CAACI,KAAR,EAAe,EAAf,CAAnB;AAEA;;;AAEAV,MAAAA,QAAQ,CAACW,gBAAT,CAA0B,WAA1B,EAAuCC,gBAAvC;AACAZ,MAAAA,QAAQ,CAACW,gBAAT,CAA0B,SAA1B,EAAqCE,cAArC;AACD,KAXD;;AAcA,UAAMD,gBAAgB,GAAG,UAAUlB,CAAV,EAAa;AACpC;AACA,YAAMoB,SAAS,GAAGpB,CAAC,CAACW,OAAF,GAAYH,UAA9B,CAFoC,CAIpC;;AACAH,MAAAA,OAAO,CAACgB,KAAR,CAAcL,KAAd,GAAuB,GAAEP,QAAQ,GAAGW,SAAU,IAA9C;AAEAnB,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,KARD;;AAUA,UAAMoB,OAAO,GAAGhB,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAAhB;AACAe,IAAAA,OAAO,CAACL,gBAAR,CAAyB,WAAzB,EAAsCP,gBAAtC;;AAEA,UAAMS,cAAc,GAAG,YAAY;AACjC;AACAb,MAAAA,QAAQ,CAACiB,mBAAT,CAA6B,WAA7B,EAA0CL,gBAA1C;AACAZ,MAAAA,QAAQ,CAACiB,mBAAT,CAA6B,SAA7B,EAAwCJ,cAAxC;AACD,KAJD;AAMD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAG,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAG,gBAAnB;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAgD,MAAA,IAAI,EAAC,YAArD;AAAkE,MAAA,WAAW,EAAC,mBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAgC,MAAA,GAAG,EAAIhC,GAAvC;AAA4C,MAAA,GAAG,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF;AASD;;AArE6B;;AAwEhC,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './Folders.scss';\r\nimport add from '../../assets/add.png'\r\nimport { findByPlaceholderText } from '@testing-library/react';\r\n\r\nclass Folders extends Component {\r\n\r\n  state = {\r\n    addFolder : false,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.addFolder = this.addFolder.bind(this)\r\n  }\r\n\r\n  addFolder(e) {\r\n    console.log(e);\r\n    this.setState(addFolder = true)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const folders = document.querySelector('.folders');\r\n    let currMouseX = 0;\r\n    let foldersW = 0;\r\n\r\n    /*mousedown on the resizers: Track the current \r\n    position of mouse and dimension of the original element \r\n    it is triggered when the user drags the element*/\r\n    const mouseDownHandler = function (e) {\r\n      currMouseX = e.clientX;\r\n\r\n      //calculate the dimensions of the element\r\n      const styles = window.getComputedStyle(folders);\r\n      foldersW = parseInt(styles.width, 10);\r\n\r\n      /*  mousemove on document: Calculate how far the mouse has been \r\n        moved, and adjust the dimension of the element */\r\n      document.addEventListener('mousemove', mouseMoveHandler)\r\n      document.addEventListener('mouseup', mouseUpHandler);\r\n    }\r\n\r\n\r\n    const mouseMoveHandler = function (e) {\r\n      // How far the mouse has been moved\r\n      const distanceX = e.clientX - currMouseX;\r\n\r\n      // Adjust the dimension of element\r\n      folders.style.width = `${foldersW + distanceX}px`;\r\n\r\n      console.log('mouse move handler is called')\r\n    };\r\n\r\n    const resizer = document.querySelector('.folders__resizer')\r\n    resizer.addEventListener('mousedown', mouseDownHandler);\r\n\r\n    const mouseUpHandler = function () {\r\n      // Remove the handlers of `mousemove` and `mouseup`\r\n      document.removeEventListener('mousemove', mouseMoveHandler);\r\n      document.removeEventListener('mouseup', mouseUpHandler);\r\n    };\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='folders'>\r\n        <div className='folders__resizer'></div>\r\n        <div className = 'folders__input-wrapper'>\r\n          <input className = 'folders__input' type='text' name='folderName' placeholder='Enter folder name' />\r\n          <img className = 'folders__add' src = {add} alt='add'/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Folders;\r\n\r\n"]},"metadata":{},"sourceType":"module"}