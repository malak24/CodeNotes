{"ast":null,"code":"import FroalaEditor from 'froala-editor';\nimport React from 'react';\nlet lastId = 0;\nexport default class FroalaEditorFunctionality extends React.Component {\n  constructor(props) {\n    super(props); // Tag on which the editor is initialized.\n\n    this.defaultTag = 'div';\n    this.tag = props.tag || this.defaultTag;\n    this.listeningEvents = []; // Jquery wrapped element.\n\n    this.element = null; // Editor element.\n\n    this.editor = null; // Editor options config\n\n    this.config = {\n      immediateReactModelUpdate: false,\n      reactIgnoreAttrs: null\n    };\n    this.editorInitialized = false;\n    this.SPECIAL_TAGS = ['img', 'button', 'input', 'a'];\n    this.INNER_HTML_ATTR = 'innerHTML';\n    this.hasSpecialTag = false;\n    this.oldModel = null;\n  } // After first time render.\n\n\n  componentDidMount() {\n    let tagName = this.el.tagName.toLowerCase();\n\n    if (this.SPECIAL_TAGS.indexOf(tagName) != -1) {\n      this.tag = tagName;\n      this.hasSpecialTag = true;\n    }\n\n    if (this.props.onManualControllerReady) {\n      this.generateManualController();\n    } else {\n      this.createEditor();\n    }\n  }\n\n  componentWillUnmount() {\n    this.destroyEditor();\n  }\n\n  componentDidUpdate() {\n    if (JSON.stringify(this.oldModel) == JSON.stringify(this.props.model)) {\n      return;\n    }\n\n    this.setContent();\n  } // Return cloned object\n\n\n  clone(item) {\n    const me = this;\n\n    if (!item) {\n      return item;\n    } // null, undefined values check\n\n\n    let types = [Number, String, Boolean],\n        result; // normalizing primitives if someone did new String('aaa'), or new Number('444');\n\n    types.forEach(function (type) {\n      if (item instanceof type) {\n        result = type(item);\n      }\n    });\n\n    if (typeof result == \"undefined\") {\n      if (Object.prototype.toString.call(item) === \"[object Array]\") {\n        result = [];\n        item.forEach(function (child, index, array) {\n          result[index] = me.clone(child);\n        });\n      } else if (typeof item == \"object\") {\n        // testing that this is DOM\n        if (item.nodeType && typeof item.cloneNode == \"function\") {\n          result = item.cloneNode(true);\n        } else if (!item.prototype) {\n          // check that this is a literal\n          if (item instanceof Date) {\n            result = new Date(item);\n          } else {\n            // it is an object literal\n            result = {};\n\n            for (var i in item) {\n              result[i] = me.clone(item[i]);\n            }\n          }\n        } else {\n          if (false && item.constructor) {\n            result = new item.constructor();\n          } else {\n            result = item;\n          }\n        }\n      } else {\n        result = item;\n      }\n    }\n\n    return result;\n  }\n\n  createEditor() {\n    if (this.editorInitialized) {\n      return;\n    }\n\n    this.config = this.clone(this.props.config || this.config);\n    this.config = { ...this.config\n    };\n    this.element = this.el;\n\n    if (this.props.model) {\n      this.element.innerHTML = this.props.model;\n    }\n\n    this.setContent(true); // Default initialized.\n\n    this.registerEvent('initialized', this.config.events && this.config.events.initialized); // Check if events are set.\n\n    if (!this.config.events) this.config.events = {};\n\n    this.config.events.initialized = () => this.initListeners();\n\n    this.editor = new FroalaEditor(this.element, this.config);\n  }\n\n  setContent(firstTime) {\n    if (this.props.model || this.props.model == '') {\n      this.oldModel = this.props.model;\n\n      if (this.hasSpecialTag) {\n        this.setSpecialTagContent();\n      } else {\n        this.setNormalTagContent(firstTime);\n      }\n    }\n  }\n\n  setNormalTagContent(firstTime) {\n    let self = this;\n\n    function htmlSet() {\n      self.editor.html && self.editor.html.set(self.props.model || '');\n\n      if (self.editorInitialized && self.editor.undo) {\n        //This will reset the undo stack everytime the model changes externally. Can we fix this?\n        self.editor.undo.reset();\n        self.editor.undo.saveStep();\n      }\n    }\n\n    if (firstTime) {\n      if (this.config.initOnClick) {\n        this.registerEvent('initializationDelayed', () => {\n          htmlSet();\n        });\n        this.registerEvent('initialized', () => {\n          this.editorInitialized = true;\n        });\n      } else {\n        this.registerEvent('initialized', () => {\n          this.editorInitialized = true;\n          htmlSet();\n        });\n      }\n    } else {\n      htmlSet();\n    }\n  }\n\n  setSpecialTagContent() {\n    let tags = this.props.model; // add tags on element\n\n    if (tags) {\n      for (let attr in tags) {\n        if (tags.hasOwnProperty(attr) && attr != this.INNER_HTML_ATTR) {\n          this.element.setAttribute(attr, tags[attr]);\n        }\n      }\n\n      if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\n        this.element.innerHTML = tags[this.INNER_HTML_ATTR];\n      }\n    }\n  }\n\n  destroyEditor() {\n    if (this.element) {\n      this.editor.destroy && this.editor.destroy();\n      this.listeningEvents.length = 0;\n      this.element = null;\n      this.editorInitialized = false;\n    }\n  }\n\n  getEditor() {\n    if (this.element) {\n      return this.editor;\n    }\n\n    return null;\n  }\n\n  generateManualController() {\n    let self = this;\n    let controls = {\n      initialize: () => self.createEditor.call(self),\n      destroy: () => self.destroyEditor.call(self),\n      getEditor: () => self.getEditor.call(self)\n    };\n    this.props.onManualControllerReady(controls);\n  }\n\n  updateModel() {\n    if (!this.props.onModelChange) {\n      return;\n    }\n\n    let modelContent = '';\n\n    if (this.hasSpecialTag) {\n      let attributeNodes = this.element.attributes;\n      let attrs = {};\n\n      for (let i = 0; i < attributeNodes.length; i++) {\n        let attrName = attributeNodes[i].name;\n\n        if (this.config.reactIgnoreAttrs && this.config.reactIgnoreAttrs.indexOf(attrName) != -1) {\n          continue;\n        }\n\n        attrs[attrName] = attributeNodes[i].value;\n      }\n\n      if (this.element.innerHTML) {\n        attrs[this.INNER_HTML_ATTR] = this.element.innerHTML;\n      }\n\n      modelContent = attrs;\n    } else {\n      let returnedHtml = this.editor.html.get();\n\n      if (typeof returnedHtml === 'string') {\n        modelContent = returnedHtml;\n      }\n    }\n\n    this.oldModel = modelContent;\n    this.props.onModelChange(modelContent);\n  }\n\n  initListeners() {\n    let self = this; // bind contentChange and keyup event to froalaModel\n\n    this.editor.events.on('contentChanged', function () {\n      self.updateModel();\n    });\n\n    if (this.config.immediateReactModelUpdate) {\n      this.editor.events.on('keyup', function () {\n        self.updateModel();\n      });\n    } // Call init events.\n\n\n    if (this._initEvents) {\n      for (let i = 0; i < this._initEvents.length; i++) {\n        this._initEvents[i].call(this.editor);\n      }\n    }\n  } // register event on jquery editor element\n\n\n  registerEvent(eventName, callback) {\n    if (!eventName || !callback) {\n      return;\n    }\n\n    if (eventName == 'initialized') {\n      if (!this._initEvents) this._initEvents = [];\n\n      this._initEvents.push(callback);\n    } else {\n      if (!this.config.events) {\n        this.config.events = {};\n      }\n\n      this.config.events[eventName] = callback;\n    }\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/malak/Desktop/codeNote/client/src/froala/lib/FroalaEditorFunctionality.jsx"],"names":["FroalaEditor","React","lastId","FroalaEditorFunctionality","Component","constructor","props","defaultTag","tag","listeningEvents","element","editor","config","immediateReactModelUpdate","reactIgnoreAttrs","editorInitialized","SPECIAL_TAGS","INNER_HTML_ATTR","hasSpecialTag","oldModel","componentDidMount","tagName","el","toLowerCase","indexOf","onManualControllerReady","generateManualController","createEditor","componentWillUnmount","destroyEditor","componentDidUpdate","JSON","stringify","model","setContent","clone","item","me","types","Number","String","Boolean","result","forEach","type","Object","prototype","toString","call","child","index","array","nodeType","cloneNode","Date","i","innerHTML","registerEvent","events","initialized","initListeners","firstTime","setSpecialTagContent","setNormalTagContent","self","htmlSet","html","set","undo","reset","saveStep","initOnClick","tags","attr","hasOwnProperty","setAttribute","destroy","length","getEditor","controls","initialize","updateModel","onModelChange","modelContent","attributeNodes","attributes","attrs","attrName","name","value","returnedHtml","get","on","_initEvents","eventName","callback","push"],"mappings":"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","sourcesContent":["import FroalaEditor from 'froala-editor';\nimport React from 'react';\n\nlet lastId = 0;\nexport default class FroalaEditorFunctionality extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Tag on which the editor is initialized.\n    this.defaultTag = 'div';\n    this.tag = props.tag || this.defaultTag;\n    this.listeningEvents = [];\n\n    // Jquery wrapped element.\n    this.element = null;\n\n    // Editor element.\n    this.editor = null;\n\n    // Editor options config\n    this.config = {\n      immediateReactModelUpdate: false,\n      reactIgnoreAttrs: null\n    };\n\n    this.editorInitialized = false;\n\n    this.SPECIAL_TAGS = ['img', 'button', 'input', 'a'];\n    this.INNER_HTML_ATTR = 'innerHTML';\n    this.hasSpecialTag = false;\n\n    this.oldModel = null;\n  }\n\n  // After first time render.\n  componentDidMount() {\n    let tagName = this.el.tagName.toLowerCase();\n    if (this.SPECIAL_TAGS.indexOf(tagName) != -1) {\n      this.tag = tagName;\n      this.hasSpecialTag = true;\n    }\n\n    if (this.props.onManualControllerReady) {\n      this.generateManualController();\n    } else {\n      this.createEditor();\n    }\n  }\n\n  componentWillUnmount() {\n    this.destroyEditor();\n  }\n\n  componentDidUpdate() {\n    if (JSON.stringify(this.oldModel) == JSON.stringify(this.props.model)) {\n      return;\n    }\n\n    this.setContent();\n  }\n\n  // Return cloned object\n   clone(item) {\n  \tconst me = this;  \n      if (!item) { return item; } // null, undefined values check\n\n      let types = [ Number, String, Boolean ], \n          result;\n\n      // normalizing primitives if someone did new String('aaa'), or new Number('444');\n      types.forEach(function(type) {\n          if (item instanceof type) {\n              result = type( item );\n          }\n      });\n\n      if (typeof result == \"undefined\") {\n          if (Object.prototype.toString.call( item ) === \"[object Array]\") {\n              result = [];\n              item.forEach(function(child, index, array) { \n                  result[index] = me.clone( child );\n              });\n          } else if (typeof item == \"object\") {\n              // testing that this is DOM\n              if (item.nodeType && typeof item.cloneNode == \"function\") {\n                  result = item.cloneNode( true );    \n              } else if (!item.prototype) { // check that this is a literal\n                  if (item instanceof Date) {\n                      result = new Date(item);\n                  } else {\n                      // it is an object literal\n                      result = {};\n                      for (var i in item) {\n                          result[i] = me.clone( item[i] );\n                      }\n                  }\n              } else {\n                  if (false && item.constructor) {\n                      result = new item.constructor();\n                  } else {\n                      result = item;\n                  }\n              }\n          } else {\n              result = item;\n          }\n      }\n      return result;\n  }\n  \n  createEditor() {\n    if (this.editorInitialized) {\n      return;\n    }\n\n    this.config = this.clone(this.props.config || this.config);\n    this.config =  {...this.config};\n\n    this.element = this.el;\n\n    if (this.props.model) {\n      this.element.innerHTML = this.props.model;\n    }\n\n    this.setContent(true);\n\n    // Default initialized.\n    this.registerEvent('initialized', this.config.events && this.config.events.initialized);\n\n    // Check if events are set.\n    if (!this.config.events) this.config.events = {};\n    this.config.events.initialized = () => this.initListeners();\n\n    this.editor = new FroalaEditor(this.element, this.config);\n  }\n\n  setContent(firstTime) {\n    if (this.props.model || this.props.model == '') {\n      this.oldModel = this.props.model;\n\n      if (this.hasSpecialTag) {\n        this.setSpecialTagContent();\n      } else {\n        this.setNormalTagContent(firstTime);\n      }\n    }\n  }\n\n  setNormalTagContent(firstTime) {\n    let self = this;\n\n    function htmlSet() {\n      self.editor.html && self.editor.html.set(self.props.model || '');\n      if (self.editorInitialized && self.editor.undo) {\n        //This will reset the undo stack everytime the model changes externally. Can we fix this?\n        self.editor.undo.reset();\n        self.editor.undo.saveStep();\n      }\n    }\n\n    if (firstTime) {\n      if (this.config.initOnClick) {\n        this.registerEvent('initializationDelayed', () => {\n          htmlSet();\n        });\n\n        this.registerEvent('initialized', () => {\n          this.editorInitialized = true;\n        });\n      } else {\n        this.registerEvent('initialized', () => {\n          this.editorInitialized = true;\n          htmlSet();\n        });\n      }\n    } else {\n      htmlSet();\n    }\n  }\n\n  setSpecialTagContent() {\n    let tags = this.props.model;\n\n    // add tags on element\n    if (tags) {\n      for (let attr in tags) {\n        if (tags.hasOwnProperty(attr) && attr != this.INNER_HTML_ATTR) {\n          this.element.setAttribute(attr, tags[attr]);\n        }\n      }\n\n      if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\n        this.element.innerHTML = tags[this.INNER_HTML_ATTR];\n      }\n    }\n  }\n\n  destroyEditor() {\n    if (this.element) {\n      this.editor.destroy && this.editor.destroy();\n      this.listeningEvents.length = 0;\n      this.element = null;\n      this.editorInitialized = false;\n    }\n  }\n\n  getEditor() {\n    if (this.element) {\n      return this.editor;\n    }\n\n    return null;\n  }\n\n  generateManualController() {\n    let self = this;\n\n    let controls = {\n      initialize: () => self.createEditor.call(self),\n      destroy: () => self.destroyEditor.call(self),\n      getEditor: () => self.getEditor.call(self)\n    };\n\n    this.props.onManualControllerReady(controls);\n  }\n\n  updateModel() {\n    if (!this.props.onModelChange) {\n      return;\n    }\n\n    let modelContent = '';\n\n    if (this.hasSpecialTag) {\n      let attributeNodes = this.element.attributes;\n      let attrs = {};\n\n      for (let i = 0; i < attributeNodes.length; i++) {\n        let attrName = attributeNodes[i].name;\n        if (this.config.reactIgnoreAttrs && this.config.reactIgnoreAttrs.indexOf(attrName) != -1) {\n          continue;\n        }\n        attrs[attrName] = attributeNodes[i].value;\n      }\n\n      if (this.element.innerHTML) {\n        attrs[this.INNER_HTML_ATTR] = this.element.innerHTML;\n      }\n\n      modelContent = attrs;\n    } else {\n      let returnedHtml = this.editor.html.get();\n      if (typeof returnedHtml === 'string') {\n        modelContent = returnedHtml;\n      }\n    }\n\n    this.oldModel = modelContent;\n    this.props.onModelChange(modelContent);\n  }\n\n  initListeners() {\n    let self = this;\n\n    // bind contentChange and keyup event to froalaModel\n    this.editor.events.on('contentChanged', function () {\n      self.updateModel();\n    });\n    if (this.config.immediateReactModelUpdate) {\n      this.editor.events.on('keyup', function () {\n        self.updateModel();\n      });\n    }\n\n    // Call init events.\n    if (this._initEvents) {\n      for (let i = 0; i < this._initEvents.length; i++) {\n        this._initEvents[i].call(this.editor);\n      }\n    }\n  }\n\n  // register event on jquery editor element\n  registerEvent(eventName, callback) {\n    if (!eventName || !callback) {\n      return;\n    }\n\n    if (eventName == 'initialized') {\n      if (!this._initEvents) this._initEvents = [];\n      this._initEvents.push(callback);\n    }\n    else {\n      if (!this.config.events) {\n        this.config.events = {};\n      }\n\n      this.config.events[eventName] = callback;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}